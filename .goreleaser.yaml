# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: op-conductor-init

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: op-conductor-init
    main: ./cmd/op-conductor-init
    binary: op-conductor-init
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.GitCommit={{.Commit}}
      - -X main.GitDate={{.Date}}

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_ {{- .Version }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README.md

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-dev"

# Build Docker images
dockers:
  - image_templates:
      - "golemnetwork/op-conductor-init:{{ .Version }}-amd64"
      - "golemnetwork/op-conductor-init:{{ .Tag }}-amd64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}-amd64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}.{{ .Minor }}-amd64"
      - "golemnetwork/op-conductor-init:latest-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--build-arg=VERSION={{.Version}}"
      - "--build-arg=GIT_COMMIT={{.Commit}}"
      - "--build-arg=GIT_DATE={{.Date}}"

  - image_templates:
      - "golemnetwork/op-conductor-init:{{ .Version }}-arm64"
      - "golemnetwork/op-conductor-init:{{ .Tag }}-arm64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}-arm64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}.{{ .Minor }}-arm64"
      - "golemnetwork/op-conductor-init:latest-arm64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--build-arg=VERSION={{.Version}}"
      - "--build-arg=GIT_COMMIT={{.Commit}}"
      - "--build-arg=GIT_DATE={{.Date}}"
    goarch: arm64

# Create Docker manifests for multi-arch
docker_manifests:
  - name_template: "golemnetwork/op-conductor-init:{{ .Version }}"
    image_templates:
      - "golemnetwork/op-conductor-init:{{ .Version }}-amd64"
      - "golemnetwork/op-conductor-init:{{ .Version }}-arm64"

  - name_template: "golemnetwork/op-conductor-init:{{ .Tag }}"
    image_templates:
      - "golemnetwork/op-conductor-init:{{ .Tag }}-amd64"
      - "golemnetwork/op-conductor-init:{{ .Tag }}-arm64"

  - name_template: "golemnetwork/op-conductor-init:v{{ .Major }}"
    image_templates:
      - "golemnetwork/op-conductor-init:v{{ .Major }}-amd64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}-arm64"

  - name_template: "golemnetwork/op-conductor-init:v{{ .Major }}.{{ .Minor }}"
    image_templates:
      - "golemnetwork/op-conductor-init:v{{ .Major }}.{{ .Minor }}-amd64"
      - "golemnetwork/op-conductor-init:v{{ .Major }}.{{ .Minor }}-arm64"

  - name_template: "golemnetwork/op-conductor-init:latest"
    image_templates:
      - "golemnetwork/op-conductor-init:latest-amd64"
      - "golemnetwork/op-conductor-init:latest-arm64"

# SBOM generation
sboms:
  - artifacts: archive
    id: archive
    documents:
      - "${artifact}.sbom.json"
  - artifacts: package
    id: package
    documents:
      - "${artifact}.sbom.json"

changelog:
  use: github
  sort: asc
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: Bug fixes
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Documentation
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999
  filters:
    exclude:
      - '^chore:'
      - '^ci:'
      - '^test:'
      - '^build:'

release:
  github:
    owner: golem-base
    name: op-conductor-init

  header: |
    ## op-conductor-init {{ .Tag }}

    Pre-configure Raft state for Optimism conductor to eliminate bootstrap sequencer requirements.

    ### Installation

    #### Binary

    Download the appropriate binary for your platform from the assets below.

    #### Docker

    ```bash
    docker pull golemnetwork/op-conductor-init:{{ .Tag }}
    ```

  draft: false
  prerelease: auto
